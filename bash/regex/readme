

## 通配符
?      # 代表一个字符
*      # 代表零个或多个字符
[123]
[1-5]
[!a]
[^a]

## 基础正则表达式
^     # 开头
$     # 结尾
.     # 除换行符以外的任意字符
[]    # 中括号中      的任意字符
[^]   # 中括号中字符外的任意字符
?     # 前面字符出现 0 次 或 一次
*     # 前面字符出现 0 次 或 多次
\w    # 0-9 a-z A-Z 中文 下划线, 对应大写表示否定
\s    # 空白字符,                对应大写表示否定
\d    # 数字,                    对应大写表示否定
\b    # 单词开头或结尾,          对应大写表示否定

## 扩展正则表达式
+      # 前面字符出现 1 次 或 多次
{n}    # 前面字符出现 n 次
{n,}   # 前面字符出现 n 次 及以上
{n, m} # 前面字符出现 n 次 到 m 次
()     # 将括号内的内容看成一个整体
|      # 或

## 注意
* 正则表达式一般采用的是贪婪匹配

## 实战
### 1. 查找合法的 IPv4 地址 (由点分割的四个数字, 每个数字的取值都是 [0, 255])
$ v='\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5]'
$ grep -P -o  "^\s*(($v)\.){3}($v)\s*\$" 1.txt
$
$ v='[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]'
$ grep -E -o  "^\s*(($v)\.){3}($v)\s*\$" 1.txt

### 2. 查看固定电话是否合法(0354-5757023 (0354)5757023 5757023)
* 区号必须以0开头, 区号可以是1到3位
* 电话号码必须是7位

$ grep -P -o '^\s*((\()?0\d{1,3}(?(2)\)|-))?\d{7}\s*$' 2.txt
$
$ grep -P -o '^\s*(0\d{1,3}-|\(0\d{1,3}\))\d{7}\s*$'   2.txt
```

## 正则表达式需要考虑的问题
1. 同一行只匹配一个, 还是多个
2. 匹配时, 是否忽略大小写(grep -i)

## 正则表达式语法
### 基础 扩展和 perl 风格
* 基础的正则表达式: grep, sed, vim
* 扩展的正则表达式: egrep, grep -E, sed -r, gawk
* perl的正则表达式: perl, grep -P

|        |说明                              |     基础             |   扩展   |   Perl 风格          |
|--------|----------------------------------|----------------------| ---------|----------------------|
|^       |字符串开头                        |     支持             |   支持   |    支持              |
|$       |字符串结尾                        |     支持             |   支持   |    支持              |
|.       |除换行符以外的任意字符            |     支持             |   支持   |    支持              |
|[]      |中括号中的任意字符                |     支持             |   支持   |    支持              |
|[^]     |中括号外的任意字符                |     支持             |   支持   |    支持              |
|?       |前面字符出现 [0,    1] 次, 贪婪   |   不支持, 转义后支持 |   支持   |    支持              |
|*       |前面字符出现 [0, 无穷] 次, 贪婪   |     支持             |   支持   |    支持              |
|+       |前面字符出现 [1, 无穷] 次, 贪婪   |   不支持, 转义后支持 |   支持   |    支持              |
|{n}     |前面字符出现  n        次, 贪婪   |   不支持, 转义后支持 |   支持   |    支持              |
|{n,}    |前面字符出现 [n, 无穷] 次, 贪婪   |   不支持, 转义后支持 |   支持   |    支持              |
|{n,m}   |前面字符出现 [n,    m] 次, 贪婪   |   不支持, 转义后支持 |   支持   |    支持              |
|        |在贪婪的字符后加上 ? 表示懒惰     |   不支持             | 不支持   |    支持              |
|()      |把括号内的内容当作一个整体        |   不支持, 转义后支持 |   支持   |    支持              |
|\1      |子表达式, 以左括号计数            |     支持             |   支持   |    支持              |
|(?=...) |向前查找  匹配指定内容, 但不返回  |   不支持             | 不支持   |    支持              |
|(?!...) |向前查找不匹配指定内容, 但不返回  |   不支持             | 不支持   |    支持              |
|(?<=...)|向后查找  匹配指定内容, 但不返回  |   不支持             | 不支持   |    支持, 只能固定长度|
|(?<!...)|向后查找不匹配指定内容, 但不返回  |   不支持             | 不支持   |    支持, 只能固定长度|
|(?(1))  |第一个子表达式成功才匹配          |   不支持             | 不支持   |    支持              |
| \|     |多个表达式或                      |   不支持, 转义后支持 |   支持   |    支持              |


### 对转义字符的支持
|                                |   grep|(grep -E)|(grep -P)| egrep |  sed  |(sed -r) |perl|  gawk|  vim |
|--------------------------------|-------|---------|---------|-------|-------|---------|----|------|------|
| \b   单词开头或结尾            |   支持|  支持   |  支持   |  支持 |  支持 |  支持   |支持|不支持|不支持|
| \B 非单词开头或结尾            |   支持|  支持   |  支持   |  支持 |  支持 |  支持   |支持|不支持|不支持|
| \d   数字                      | 不支持|不支持   |  支持   |不支持 |不支持 |不支持   |支持|不支持|  支持|
| \D 非数字                      | 不支持|不支持   |  支持   |不支持 |不支持 |不支持   |支持|不支持|  支持|
| \s   空白字符                  |   支持|  支持   |  支持   |  支持 |  支持 |  支持   |支持|不支持|  支持|
| \S 非空白字符                  |   支持|  支持   |  支持   |  支持 |  支持 |  支持   |支持|不支持|  支持|
| \w   数字 字母 下划线          |   支持|  支持   |  支持   |  支持 |  支持 |  支持   |支持|不支持|  支持|
| \W 非数字 字母 下划线          |   支持|  支持   |  支持   |  支持 |  支持 |  支持   |支持|不支持|  支持|
| \l 下一字符转换为小写          | 不支持|不支持   |不支持   |不支持 |  支持 |  支持   |支持|不支持|  支持|
| \L 所有字符转换为小写, 直到 \E | 不支持|不支持   |不支持   |不支持 |  支持 |  支持   |支持|不支持|  支持|
| \u 下一字符转换为大写          | 不支持|不支持   |不支持   |不支持 |  支持 |  支持   |支持|不支持|  支持|
| \U 所有字符转换为大写, 直到 \E | 不支持|不支持   |不支持   |不支持 |  支持 |  支持   |支持|不支持|  支持|

## 通配符
?      # 代表一个字符
*      # 代表零个或多个字符
[123]
[1-5]
[!a]
[^a]

## 基础正则表达式
^     # 开头
$     # 结尾
.     # 除换行符以外的任意字符
[]    # 中括号中      的任意字符
[^]   # 中括号中字符外的任意字符
?     # 前面字符出现 0 次 或 一次
*     # 前面字符出现 0 次 或 多次
\w    # 0-9 a-z A-Z 中文 下划线, 对应大写表示否定
\s    # 空白字符,                对应大写表示否定
\d    # 数字,                    对应大写表示否定
\b    # 单词开头或结尾,          对应大写表示否定

## 扩展正则表达式
+      # 前面字符出现 1 次 或 多次
{n}    # 前面字符出现 n 次
{n,}   # 前面字符出现 n 次 及以上
{n, m} # 前面字符出现 n 次 到 m 次
()     # 将括号内的内容看成一个整体
|      # 或

## 注意
* 正则表达式一般采用的是贪婪匹配

