// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.message_unit.proto

#include "chat.message_unit.pb.h"

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>

#include <algorithm>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace chat {
class message_unitDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<message_unit> _instance;
} _message_unit_default_instance_;
}  // namespace chat
namespace protobuf_chat_2emessage_5funit_2eproto {
static void InitDefaultsmessage_unit() {
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    {
        void* ptr = &::chat::_message_unit_default_instance_;
        new (ptr)::chat::message_unit();
        ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
    }
    ::chat::message_unit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_message_unit = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsmessage_unit},
    {}};

void InitDefaults() {
    ::google::protobuf::internal::InitSCC(&scc_info_message_unit.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::message_unit,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::message_unit,
                                                       user_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::message_unit,
                                                       data_),
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, sizeof(::chat::message_unit)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::chat::_message_unit_default_instance_),
};

void protobuf_AssignDescriptors() {
    AddDescriptors();
    AssignDescriptors("chat.message_unit.proto", schemas,
                      file_default_instances, TableStruct::offsets,
                      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
    static ::google::protobuf::internal::once_flag once;
    ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&)
    GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
    InitDefaults();
    static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        "\n\027chat.message_unit.proto\022\004chat\"*\n\014messa"
        "ge_unit\022\014\n\004user\030\001 \001(\t\022\014\n\004data\030\002 "
        "\001(\tb\006pro"
        "to3"};
    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor,
                                                                 83);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
        "chat.message_unit.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
    static ::google::protobuf::internal::once_flag once;
    ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
    StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
}  // namespace protobuf_chat_2emessage_5funit_2eproto
namespace chat {

// ===================================================================

void message_unit::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_unit::kUserFieldNumber;
const int message_unit::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_unit::message_unit()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    ::google::protobuf::internal::InitSCC(
        &protobuf_chat_2emessage_5funit_2eproto::scc_info_message_unit.base);
    SharedCtor();
    // @@protoc_insertion_point(constructor:chat.message_unit)
}
message_unit::message_unit(const message_unit& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    user_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.user().size() > 0) {
        user_.AssignWithDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            from.user_);
    }
    data_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.data().size() > 0) {
        data_.AssignWithDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            from.data_);
    }
    // @@protoc_insertion_point(copy_constructor:chat.message_unit)
}

void message_unit::SharedCtor() {
    user_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.UnsafeSetDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

message_unit::~message_unit() {
    // @@protoc_insertion_point(destructor:chat.message_unit)
    SharedDtor();
}

void message_unit::SharedDtor() {
    user_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.DestroyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void message_unit::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* message_unit::descriptor() {
    ::protobuf_chat_2emessage_5funit_2eproto::protobuf_AssignDescriptorsOnce();
    return ::protobuf_chat_2emessage_5funit_2eproto::file_level_metadata
        [kIndexInFileMessages]
            .descriptor;
}

const message_unit& message_unit::default_instance() {
    ::google::protobuf::internal::InitSCC(
        &protobuf_chat_2emessage_5funit_2eproto::scc_info_message_unit.base);
    return *internal_default_instance();
}

void message_unit::Clear() {
    // @@protoc_insertion_point(message_clear_start:chat.message_unit)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    user_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.ClearToEmptyNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
    _internal_metadata_.Clear();
}

bool message_unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:chat.message_unit)
    for (;;) {
        ::std::pair<::google::protobuf::uint32, bool> p =
            input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(
            tag)) {
            // string user = 1;
            case 1: {
                if (static_cast<::google::protobuf::uint8>(tag) ==
                    static_cast<::google::protobuf::uint8>(
                        10u /* 10 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::
                            ReadString(input, this->mutable_user()));
                    DO_(::google::protobuf::internal::WireFormatLite::
                            VerifyUtf8String(
                                this->user().data(),
                                static_cast<int>(this->user().length()),
                                ::google::protobuf::internal::WireFormatLite::
                                    PARSE,
                                "chat.message_unit.user"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // string data = 2;
            case 2: {
                if (static_cast<::google::protobuf::uint8>(tag) ==
                    static_cast<::google::protobuf::uint8>(
                        18u /* 18 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::
                            ReadString(input, this->mutable_data()));
                    DO_(::google::protobuf::internal::WireFormatLite::
                            VerifyUtf8String(
                                this->data().data(),
                                static_cast<int>(this->data().length()),
                                ::google::protobuf::internal::WireFormatLite::
                                    PARSE,
                                "chat.message_unit.data"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:chat.message_unit)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:chat.message_unit)
    return false;
#undef DO_
}

void message_unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:chat.message_unit)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // string user = 1;
    if (this->user().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "chat.message_unit.user");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            1, this->user(), output);
    }

    // string data = 2;
    if (this->data().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "chat.message_unit.data");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
            2, this->data(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:chat.message_unit)
}

::google::protobuf::uint8*
message_unit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:chat.message_unit)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // string user = 1;
    if (this->user().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "chat.message_unit.user");
        target =
            ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                1, this->user(), target);
    }

    // string data = 2;
    if (this->data().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "chat.message_unit.data");
        target =
            ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
                2, this->data(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::
            SerializeUnknownFieldsToArray(
                (::google::protobuf::internal::
                         GetProto3PreserveUnknownsDefault()
                     ? _internal_metadata_.unknown_fields()
                     : _internal_metadata_.default_instance()),
                target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:chat.message_unit)
    return target;
}

size_t message_unit::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:chat.message_unit)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((
                ::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                    ? _internal_metadata_.unknown_fields()
                    : _internal_metadata_.default_instance()));
    }
    // string user = 1;
    if (this->user().size() > 0) {
        total_size +=
            1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                    this->user());
    }

    // string data = 2;
    if (this->data().size() > 0) {
        total_size +=
            1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                    this->data());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    SetCachedSize(cached_size);
    return total_size;
}

void message_unit::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:chat.message_unit)
    GOOGLE_DCHECK_NE(&from, this);
    const message_unit* source =
        ::google::protobuf::internal::DynamicCastToGenerated<
            const message_unit>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.message_unit)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.message_unit)
        MergeFrom(*source);
    }
}

void message_unit::MergeFrom(const message_unit& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:chat.message_unit)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    if (from.user().size() > 0) {
        user_.AssignWithDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            from.user_);
    }
    if (from.data().size() > 0) {
        data_.AssignWithDefault(
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            from.data_);
    }
}

void message_unit::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:chat.message_unit)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void message_unit::CopyFrom(const message_unit& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:chat.message_unit)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool message_unit::IsInitialized() const { return true; }

void message_unit::Swap(message_unit* other) {
    if (other == this) return;
    InternalSwap(other);
}
void message_unit::InternalSwap(message_unit* other) {
    using std::swap;
    user_.Swap(&other->user_,
               &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
               GetArenaNoVirtual());
    data_.Swap(&other->data_,
               &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
               GetArenaNoVirtual());
    _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata message_unit::GetMetadata() const {
    protobuf_chat_2emessage_5funit_2eproto::protobuf_AssignDescriptorsOnce();
    return ::protobuf_chat_2emessage_5funit_2eproto::file_level_metadata
        [kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace chat
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::message_unit*
Arena::CreateMaybeMessage<::chat::message_unit>(Arena* arena) {
    return Arena::CreateInternal<::chat::message_unit>(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
